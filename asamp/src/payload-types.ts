/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    squads: Squad;
    sprints: Sprint;
    attendanceLogs: AttendanceLog;
    leaveRequests: LeaveRequest;
    auditLogs: AuditLog;
    notifications: Notification;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    squads: SquadsSelect<false> | SquadsSelect<true>;
    sprints: SprintsSelect<false> | SprintsSelect<true>;
    attendanceLogs: AttendanceLogsSelect<false> | AttendanceLogsSelect<true>;
    leaveRequests: LeaveRequestsSelect<false> | LeaveRequestsSelect<true>;
    auditLogs: AuditLogsSelect<false> | AuditLogsSelect<true>;
    notifications: NotificationsSelect<false> | NotificationsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name: string;
  role: 'admin' | 'squadLead' | 'member' | 'viewer';
  squad?: (string | null) | Squad;
  workMode: 'remote' | 'office' | 'client-site' | 'ooo';
  timeZone: string;
  isActive?: boolean | null;
  avatar?: (string | null) | Media;
  lastCheckIn?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "squads".
 */
export interface Squad {
  id: string;
  name: string;
  description?: string | null;
  lead?: (string | null) | User;
  members?: (string | User)[] | null;
  project?: string | null;
  timeZone: string;
  workdays?: ('Monday' | 'Tuesday' | 'Wednesday' | 'Thursday' | 'Friday' | 'Saturday' | 'Sunday')[] | null;
  activeSprint?: (string | null) | Sprint;
  /**
   * Calculated weekly, auto-populated
   */
  complianceScore?: number | null;
  /**
   * Real-time status summary
   */
  statusBoard?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sprints".
 */
export interface Sprint {
  id: string;
  name: string;
  startDate: string;
  endDate: string;
  squad: string | Squad;
  tags?:
    | {
        tag?: ('standup' | 'retro' | 'planning' | 'review' | 'refinement' | 'demo') | null;
        id?: string | null;
      }[]
    | null;
  /**
   * External Jira sprint ID for integration
   */
  linkedJiraSprintId?: string | null;
  /**
   * Mark as true if this is the current active sprint
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attendanceLogs".
 */
export interface AttendanceLog {
  id: string;
  user: string | User;
  squad: string | Squad;
  sprint?: (string | null) | Sprint;
  date: string;
  checkInTime: string;
  checkOutTime?: string | null;
  /**
   * IP address or geolocation data
   */
  location?: string | null;
  workMode: 'remote' | 'office' | 'client-site' | 'ooo';
  flags?:
    | {
        flag?: ('partial-day' | 'late' | 'leave' | 'anomaly') | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Optional comments about the attendance record
   */
  notes?: string | null;
  /**
   * Mark as verified by auto-system or admin
   */
  verified?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "leaveRequests".
 */
export interface LeaveRequest {
  id: string;
  user?: (string | null) | User;
  squad?: (string | null) | Squad;
  type: 'vacation' | 'sick' | 'public-holiday' | 'training';
  /**
   * Provide reason for leave request
   */
  reason: string;
  /**
   * Duration of leave (e.g., "2 weeks", "3 days", "1 month")
   */
  duration: string;
  status: 'pending-squad-lead' | 'rejected-squad-lead' | 'pending-admin' | 'approved' | 'rejected-admin';
  /**
   * Squad Lead who approved/rejected the request
   */
  approvedBySquadLead?: (string | null) | User;
  squadLeadApprovalDate?: string | null;
  /**
   * Admin who gave final approval/rejection
   */
  approvedByAdmin?: (string | null) | User;
  adminApprovalDate?: string | null;
  /**
   * Optional supporting documents (medical certificate, etc.)
   */
  supportingDocs?: (string | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auditLogs".
 */
export interface AuditLog {
  id: string;
  /**
   * Description of the action performed (e.g. "check-in updated")
   */
  action: string;
  /**
   * User who performed the action
   */
  performedBy: string | User;
  /**
   * When the action was performed
   */
  timestamp: string;
  /**
   * Previous state of the record before change
   */
  oldValue?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * New state of the record after change
   */
  newValue?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications".
 */
export interface Notification {
  id: string;
  /**
   * Short title like "Missed Check-in"
   */
  title: string;
  /**
   * Main message content
   */
  message: string;
  type: 'checkin' | 'leave' | 'reminder' | 'system';
  /**
   * User who will receive this notification
   */
  recipient: string | User;
  /**
   * Link to related record (e.g. a leave request)
   */
  related?:
    | ({
        relationTo: 'attendanceLogs';
        value: string | AttendanceLog;
      } | null)
    | ({
        relationTo: 'leaveRequests';
        value: string | LeaveRequest;
      } | null)
    | ({
        relationTo: 'sprints';
        value: string | Sprint;
      } | null)
    | ({
        relationTo: 'squads';
        value: string | Squad;
      } | null);
  /**
   * Has the user seen this notification?
   */
  isRead?: boolean | null;
  /**
   * When the notification was created/sent
   */
  sentAt: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'squads';
        value: string | Squad;
      } | null)
    | ({
        relationTo: 'sprints';
        value: string | Sprint;
      } | null)
    | ({
        relationTo: 'attendanceLogs';
        value: string | AttendanceLog;
      } | null)
    | ({
        relationTo: 'leaveRequests';
        value: string | LeaveRequest;
      } | null)
    | ({
        relationTo: 'auditLogs';
        value: string | AuditLog;
      } | null)
    | ({
        relationTo: 'notifications';
        value: string | Notification;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  squad?: T;
  workMode?: T;
  timeZone?: T;
  isActive?: T;
  avatar?: T;
  lastCheckIn?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "squads_select".
 */
export interface SquadsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  lead?: T;
  members?: T;
  project?: T;
  timeZone?: T;
  workdays?: T;
  activeSprint?: T;
  complianceScore?: T;
  statusBoard?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sprints_select".
 */
export interface SprintsSelect<T extends boolean = true> {
  name?: T;
  startDate?: T;
  endDate?: T;
  squad?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  linkedJiraSprintId?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attendanceLogs_select".
 */
export interface AttendanceLogsSelect<T extends boolean = true> {
  user?: T;
  squad?: T;
  sprint?: T;
  date?: T;
  checkInTime?: T;
  checkOutTime?: T;
  location?: T;
  workMode?: T;
  flags?:
    | T
    | {
        flag?: T;
        id?: T;
      };
  notes?: T;
  verified?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "leaveRequests_select".
 */
export interface LeaveRequestsSelect<T extends boolean = true> {
  user?: T;
  squad?: T;
  type?: T;
  reason?: T;
  duration?: T;
  status?: T;
  approvedBySquadLead?: T;
  squadLeadApprovalDate?: T;
  approvedByAdmin?: T;
  adminApprovalDate?: T;
  supportingDocs?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auditLogs_select".
 */
export interface AuditLogsSelect<T extends boolean = true> {
  action?: T;
  performedBy?: T;
  timestamp?: T;
  oldValue?: T;
  newValue?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications_select".
 */
export interface NotificationsSelect<T extends boolean = true> {
  title?: T;
  message?: T;
  type?: T;
  recipient?: T;
  related?: T;
  isRead?: T;
  sentAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}